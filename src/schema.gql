# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type Donation {
  count: Int!
  createdAt: DateTime!
  displayName: String!
  email: String!
  id: ID!
  message: String
  mobile: String
  team: String
}

input DonationCreateInput {
  count: Int!
  createdAt: DateTime
  displayName: String!
  email: String!
  message: String
  mobile: String
  team: String
}

input DonationOrderByWithRelationInput {
  count: SortOrder
  createdAt: SortOrder
  displayName: SortOrder
  email: SortOrder
  id: SortOrder
  message: SortOrder
  mobile: SortOrder
  team: SortOrder
}

enum DonationScalarFieldEnum {
  count
  createdAt
  displayName
  email
  id
  message
  mobile
  team
}

input DonationSumAggregateInput {
  count: Boolean
  id: Boolean
}

input DonationWhereInput {
  AND: [DonationWhereInput!]
  NOT: [DonationWhereInput!]
  OR: [DonationWhereInput!]
  count: IntFilter
  createdAt: DateTimeFilter
  displayName: StringFilter
  email: StringFilter
  id: IntFilter
  message: StringNullableFilter
  mobile: StringNullableFilter
  team: StringNullableFilter
}

input DonationWhereUniqueInput {
  id: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Mutation {
  createDonation(donationCreateInput: DonationCreateInput!): Donation!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  donations(cursor: DonationWhereUniqueInput, distinct: [DonationScalarFieldEnum!], orderBy: [DonationOrderByWithRelationInput!], skip: Int, take: Int, where: DonationWhereInput): [Donation!]!
  total(donationSumAggregateInput: DonationSumAggregateInput!): Int!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  totalUpdated: TotalUpdate!
}

type TotalUpdate {
  total: Int!
}
